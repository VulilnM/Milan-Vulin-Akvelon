// <auto-generated />
using System;
using Akvelon_Internship_Test_Task.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Akvelon_Internship_Test_Task.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220422093614_ignoreProjectInTask")]
    partial class ignoreProjectInTask
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Akvelon_Internship_Test_Task.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CompletionDate")
                        .HasColumnType("date");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectPriority")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ProjectId");

                    b.ToTable("Project");

                    b.HasData(
                        new
                        {
                            ProjectId = 1,
                            CompletionDate = new DateTime(2022, 9, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectName = "ClickUp",
                            ProjectPriority = 1,
                            StartDate = new DateTime(2021, 7, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        },
                        new
                        {
                            ProjectId = 2,
                            CompletionDate = new DateTime(2021, 6, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectName = "Clockify",
                            ProjectPriority = 2,
                            StartDate = new DateTime(2020, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 3
                        },
                        new
                        {
                            ProjectId = 3,
                            CompletionDate = new DateTime(2024, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectName = "Airbnb",
                            ProjectPriority = 3,
                            StartDate = new DateTime(2022, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1
                        });
                });

            modelBuilder.Entity("Akvelon_Internship_Test_Task.Models.Task", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProjectFK")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TaskDescription")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaskPriority")
                        .HasColumnType("int");

                    b.HasKey("TaskId");

                    b.HasIndex("ProjectFK");

                    b.ToTable("Task");

                    b.HasData(
                        new
                        {
                            TaskId = 1,
                            ProjectFK = 1,
                            Status = 2,
                            TaskDescription = "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.",
                            TaskName = "User Data Pagination",
                            TaskPriority = 1
                        },
                        new
                        {
                            TaskId = 2,
                            ProjectFK = 1,
                            Status = 1,
                            TaskDescription = "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.",
                            TaskName = "Login/Register functionality",
                            TaskPriority = 2
                        },
                        new
                        {
                            TaskId = 3,
                            ProjectFK = 1,
                            Status = 2,
                            TaskDescription = "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.",
                            TaskName = "Home Page View For Mobile",
                            TaskPriority = 1
                        },
                        new
                        {
                            TaskId = 4,
                            ProjectFK = 2,
                            Status = 3,
                            TaskDescription = "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.",
                            TaskName = "Convert timezones for middle-east users",
                            TaskPriority = 1
                        },
                        new
                        {
                            TaskId = 5,
                            ProjectFK = 2,
                            Status = 3,
                            TaskDescription = "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.",
                            TaskName = "Fix drop-down side menu bug",
                            TaskPriority = 3
                        },
                        new
                        {
                            TaskId = 6,
                            ProjectFK = 3,
                            Status = 1,
                            TaskDescription = "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.",
                            TaskName = "Set up online payments with $BTC (Bitcoin)",
                            TaskPriority = 1
                        });
                });

            modelBuilder.Entity("Akvelon_Internship_Test_Task.Models.Task", b =>
                {
                    b.HasOne("Akvelon_Internship_Test_Task.Models.Project", "Project")
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Akvelon_Internship_Test_Task.Models.Project", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
